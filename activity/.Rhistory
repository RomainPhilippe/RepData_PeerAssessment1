setwd("C:/Users/Roro7_000/Documents/MOOC/Reproducible research/Project1/RepData_PeerAssessment1/activity")
activity<-read.csv('activity.csv',stringsAsFactors=F)
dfActivity<-as.data.frame(activity)
str(dfActivity)
dfActivityClean<-dfActivity[complete.cases(dfActivity),]
head(dfActivityClean)
dfActivityClean$date <- as.Date(format(dfActivityClean$date, format="%Y-%m-%d"))
library(plyr)
totalStepsByDay<-ddply(dfActivityClean, .(date), summarize, total=sum(steps))
totalStepsByDay$total<-as.numeric(totalStepsByDay$total)
totalStepsByDay$date<-as.Date(totalStepsByDay$date)
totalStepsByDay$Source<-'NOT NA'
head(totalStepsByDay)
mean(dfActivityClean$steps)
library(ggplot2)
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity") + theme(text = element_text(size=20), axis.text.x = element_text(angle=90, vjust=1))
library(ggplot2)
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity") + theme(text = element_text(size=20), axis.text.x = element_text(angle=50, vjust=1))+ ggtitle("Number total of steps by day")
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity") + theme(text = element_text(size=20)+ ggtitle("Number total of steps by day")
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity",color="#D55E00") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity",color="#D55E00") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")+scale_fill_hue(l=40)
library(ggplot2)
ggplot(data=totalStepsByDay, aes(x = date, y =total,fill=cond)) + geom_histogram(stat = "identity",color="#D55E00") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
library(ggplot2)
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity",colour="#D55E00") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity",, fill="#D55E00",colour="#D55E00") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
ggplot(data=totalStepsByDay, aes(x = date, y =total)) + geom_histogram(stat = "identity",, fill="#D55E00",colour="#0072B2") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
ddply(dfActivityClean, .(date), summarize, total=sum(steps),mean=mean(steps),median=median(steps))
averageStepsByinterval<-ddply(dfActivityClean, .(interval), summarize, mean=mean(steps))
maxMeanStep<-max(averageStepsByinterval$mean)
invervalWithMaxStep<-averageStepsByinterval[averageStepsByinterval$mean==maxMeanStep,]$interval
ggplot(data=averageStepsByinterval, aes(x = interval, y =mean)) +  geom_line()+geom_point(data = averageStepsByinterval, aes(x=invervalWithMaxStep, max(mean)), col = 'darkblue',size=5) + geom_text(data = averageStepsByinterval, aes(x=invervalWithMaxStep+250, max(mean), label = "Maximum"),colour='darkblue')
invervalWithMaxStep
nrowBefore<-nrow(dfActivity)
nrowAfter<-nrow(dfActivityClean)
missingValueRow<-nrowBefore-nrowAfter
missingValueRow
totalStepsByDayWithNa<-ddply(dfActivity, .(date), summarize, total=sum(steps))
totalStepsByDayWithNa$total<-as.numeric(totalStepsByDayWithNa$total)
totalStepsByDayWithNa$date<-as.Date(totalStepsByDayWithNa$date)
totalStepsByDayWithNa$Source<-'NA'
ggplot(data=totalStepsByDayWithNa, aes(x = factor(date), y =total)) + geom_histogram(stat = "identity")
ddply(dfActivity, .(date), summarize, total=sum(steps),mean=mean(steps),median=median(steps))
ggplot(data=totalStepsByDayWithNa, aes(x = date, y =total)) + geom_histogram(stat = "identity")
ggplot(data=totalStepsByDayWithNa, aes(x = date, y =total))+ geom_histogram(stat = "identity",, fill="#D55E00",colour="#0072B2") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
totalStepsByDayWithNa
for(j in 1:nrow(dfActivity)){
if(is.na(dfActivity[j,]$steps)){
#we look at the averageStepsByinterval dataframe to match with the coresponding interval value
dfActivity[j,]$steps<-averageStepsByinterval[averageStepsByinterval$interval==dfActivity[j,]$interval,]$mean
}
}
na_count <-sapply(dfActivity, function(y) sum(length(which(is.na(y)))))
print(na_count,type="html")
head(dfActivity)
totalStepsByDayWithNa<-ddply(dfActivity, .(date), summarize, total=sum(steps))
totalStepsByDayWithNa$total<-as.numeric(totalStepsByDayWithNa$total)
totalStepsByDayWithNa$date<-as.Date(totalStepsByDayWithNa$date)
totalStepsByDayWithNa$Source<-'NA'
ggplot(data=totalStepsByDayWithNa, aes(x = date, y =total))+ geom_histogram(stat = "identity",, fill="#D55E00",colour="#0072B2") + theme(text = element_text(size=20))+ ggtitle("Number total of steps by day")
ddply(dfActivity, .(date), summarize, total=sum(steps),mean=mean(steps),median=median(steps))
dataMerged<-rbind(totalStepsByDayWithNa,totalStepsByDay)
ggplot(data=dataMerged, aes(x = date, y =total,fill=Source)) + geom_histogram(stat = "identity",binwidth=1, position="dodge")
